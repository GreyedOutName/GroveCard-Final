{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { SLIDER_WIDTH, ITEM_WIDTH } from \"../code/carouselCardItem\";\nimport { decks } from \"../code/data\";\nimport Flashcard from \"../code/flashcards\";\nimport CarouselCards from \"../code/carouselCards\";\nimport { useNavigation } from '@react-navigation/native';\nimport { selectedDeck, setSelectedDeck } from \"../code/data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Search() {\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    searchText = _React$useState2[0],\n    setSearchText = _React$useState2[1];\n  var _React$useState3 = React.useState([]),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    searchResults = _React$useState4[0],\n    setSearchResults = _React$useState4[1];\n  var navigation = useNavigation();\n  var handleClear = function handleClear() {\n    setSearchText('');\n    setSearchResults([]);\n  };\n  var handleSearch = function handleSearch(query) {\n    setSearchText(query);\n    filterDecks(query);\n  };\n  var filterDecks = function filterDecks(query) {\n    var filteredDecks = decks.filter(function (deck) {\n      return deck.name.toLowerCase().includes(query.toLowerCase());\n    });\n    setSearchResults(filteredDecks);\n  };\n  var renderResultItem = function renderResultItem(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableOpacity, {\n      style: styles.resultItem,\n      onPress: function onPress() {\n        return handleResultPress(item);\n      },\n      children: _jsx(Text, {\n        style: styles.resultItemText,\n        children: item.name\n      })\n    });\n  };\n  var handleResultPress = function handleResultPress(item) {\n    setSelectedDeck(_objectSpread({}, item));\n    navigation.navigate('View Screen');\n  };\n  return _jsx(ImageBackground, {\n    source: require(\"../assets/JungleBg.gif\"),\n    style: styles.backgroundimage,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.searchContainer,\n        children: _jsxs(View, {\n          style: styles.SearchBar,\n          children: [_jsx(Icon, {\n            name: \"search-outline\",\n            style: styles.searchIcon\n          }), _jsx(TextInput, {\n            style: {\n              flex: 1,\n              margin: 10,\n              marginLeft: 5,\n              fontSize: 16\n            },\n            placeholder: \"Search\",\n            value: searchText,\n            onChangeText: function onChangeText(text) {\n              return handleSearch(text);\n            }\n          }), searchText ? _jsx(TouchableOpacity, {\n            onPress: handleClear,\n            style: styles.closeIconContainer,\n            children: _jsx(Icon, {\n              name: \"close-outline\",\n              style: styles.closeIcon\n            })\n          }) : null]\n        })\n      }), searchText === '' ? _jsx(Text, {\n        style: styles.l1,\n        children: \"Try searching your school!\"\n      }) : _jsx(View, {\n        style: styles.resultContainer,\n        children: _jsx(FlatList, {\n          data: searchResults,\n          renderItem: renderResultItem,\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          }\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  backgroundimage: {\n    flex: 1,\n    resizeMode: 'cover',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center'\n  },\n  container: {},\n  searchContainer: {\n    width: '80%',\n    transform: [{\n      translateX: -50\n    }]\n  },\n  SearchBar: {\n    height: 50,\n    backgroundColor: '#ece3ce',\n    borderRadius: 50,\n    flexDirection: 'row',\n    borderColor: '#000',\n    borderWidth: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  resultContainer: {\n    flex: 1,\n    marginTop: 70,\n    width: '80%'\n  },\n  resultItem: {\n    marginVertical: 10,\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc'\n  },\n  resultItemText: {\n    fontSize: 16,\n    color: '#fff'\n  },\n  searchIcon: {\n    marginLeft: 10,\n    marginRight: 5,\n    color: '#527746',\n    fontSize: 30\n  },\n  closeIconContainer: {\n    padding: 8\n  },\n  closeIcon: {\n    color: '#527746',\n    fontSize: 30\n  },\n  l1: {\n    fontSize: 12,\n    letterSpacing: 1,\n    fontWeight: '700',\n    color: '#ece3ce',\n    textAlign: 'center',\n    width: 295,\n    height: 23,\n    margin: 85,\n    left: -25\n  }\n});","map":{"version":3,"names":["React","ImageBackground","StyleSheet","Text","TextInput","TouchableOpacity","View","FlatList","Icon","SLIDER_WIDTH","ITEM_WIDTH","decks","Flashcard","CarouselCards","useNavigation","selectedDeck","setSelectedDeck","jsx","_jsx","jsxs","_jsxs","Search","_React$useState","useState","_React$useState2","_slicedToArray","searchText","setSearchText","_React$useState3","_React$useState4","searchResults","setSearchResults","navigation","handleClear","handleSearch","query","filterDecks","filteredDecks","filter","deck","name","toLowerCase","includes","renderResultItem","_ref","item","style","styles","resultItem","onPress","handleResultPress","children","resultItemText","_objectSpread","navigate","source","require","backgroundimage","container","searchContainer","SearchBar","searchIcon","flex","margin","marginLeft","fontSize","placeholder","value","onChangeText","text","closeIconContainer","closeIcon","l1","resultContainer","data","renderItem","keyExtractor","index","toString","create","resizeMode","justifyContent","alignContent","alignItems","width","transform","translateX","height","backgroundColor","borderRadius","flexDirection","borderColor","borderWidth","marginTop","marginVertical","padding","borderBottomWidth","borderBottomColor","color","marginRight","letterSpacing","fontWeight","textAlign","left"],"sources":["C:/Users/DiAko/GroveCard-Final/navigation/screens/SearchScreen.js"],"sourcesContent":["import * as React from 'react';\r\nimport { ImageBackground, StyleSheet, Text, TextInput, TouchableOpacity, View, FlatList } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\n\r\nimport { SLIDER_WIDTH, ITEM_WIDTH } from '../code/carouselCardItem';\r\nimport { decks } from '../code/data';\r\nimport Flashcard from '../code/flashcards';\r\nimport CarouselCards from '../code/carouselCards';\r\nimport { useNavigation } from '@react-navigation/native';  \r\nimport { selectedDeck,setSelectedDeck } from '../code/data';\r\n\r\nexport default function Search() {\r\n  const [searchText, setSearchText] = React.useState('');\r\n  const [searchResults, setSearchResults] = React.useState([]);\r\n  const navigation = useNavigation();  \r\n\r\n  const handleClear = () => {\r\n    setSearchText('');\r\n    setSearchResults([]);\r\n  };\r\n\r\n  const handleSearch = (query) => {\r\n    setSearchText(query);\r\n    filterDecks(query);\r\n  };\r\n\r\n  const filterDecks = (query) => {\r\n    const filteredDecks = decks.filter((deck) =>\r\n      deck.name.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n    setSearchResults(filteredDecks);\r\n  };\r\n\r\n  const renderResultItem = ({ item }) => (\r\n    <TouchableOpacity style={styles.resultItem} onPress={() => handleResultPress(item)}>\r\n      <Text style={styles.resultItemText}>{item.name}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  const handleResultPress = (item) => {\r\n    setSelectedDeck({...item});  \r\n    navigation.navigate('View Screen');  \r\n  };\r\n\r\n  return (\r\n    <ImageBackground source={require('../assets/JungleBg.gif')} style={styles.backgroundimage}>\r\n      <View style={styles.container}>\r\n        <View style={styles.searchContainer}>\r\n          <View style={styles.SearchBar}>\r\n            <Icon name='search-outline' style={styles.searchIcon} />\r\n            <TextInput\r\n              style={{ flex: 1, margin: 10, marginLeft: 5, fontSize: 16 }}\r\n              placeholder='Search'\r\n              value={searchText}\r\n              onChangeText={(text) => handleSearch(text)}\r\n            />\r\n            {searchText ? (\r\n              <TouchableOpacity onPress={handleClear} style={styles.closeIconContainer}>\r\n                <Icon name='close-outline' style={styles.closeIcon} />\r\n              </TouchableOpacity>\r\n            ) : null}\r\n          </View>\r\n        </View>\r\n\r\n        {searchText === '' ? (\r\n          <Text style={styles.l1}>Try searching your school!</Text>\r\n        ) : (\r\n          <View style={styles.resultContainer}>\r\n            <FlatList\r\n              data={searchResults}\r\n              renderItem={renderResultItem}\r\n              keyExtractor={(item, index) => index.toString()}\r\n            />\r\n          </View>\r\n      )}\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  backgroundimage: {\r\n    flex: 1,\r\n    resizeMode: 'cover', // or 'stretch' or 'contain'\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  container:{\r\n   \r\n  },\r\n  searchContainer: {\r\n    width: '80%',\r\n    transform: [{ translateX: -50 }],\r\n  },\r\n  SearchBar: {\r\n    height: 50,\r\n    backgroundColor: '#ece3ce',\r\n    borderRadius: 50,\r\n    flexDirection: 'row',\r\n    borderColor: '#000',\r\n    borderWidth: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  resultContainer: {\r\n    flex: 1,\r\n    marginTop: 70, \r\n    width: '80%',\r\n  },\r\n  resultItem: {\r\n    marginVertical: 10,\r\n    padding: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n  },\r\n  resultItemText: {\r\n    fontSize: 16,\r\n    color: '#fff',\r\n  },\r\n  searchIcon: {\r\n    marginLeft: 10,\r\n    marginRight: 5,\r\n    color: '#527746',\r\n    fontSize: 30,\r\n  },\r\n  closeIconContainer: {\r\n    padding: 8,\r\n  },\r\n  closeIcon: {\r\n    color: '#527746',\r\n    fontSize: 30,\r\n  },\r\n  l1: {\r\n    fontSize: 12,\r\n    letterSpacing: 1,\r\n    fontWeight: '700',\r\n    color: '#ece3ce',\r\n    textAlign: 'center',\r\n    width: 295,\r\n    height: 23,\r\n    margin: 85,\r\n    left: -25,\r\n  },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}